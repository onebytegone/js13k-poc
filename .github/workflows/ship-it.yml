name: Ship It

on:
   push:
      branches: [ master, actions ]
      tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]

jobs:
   build:
      runs-on: ubuntu-latest
      steps:
         -
            uses: actions/checkout@v2
            with:
               fetch-depth: 0
         -
            name: Use Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v1
            with:
               node-version: ${{ matrix.node-version }}
         -
            run: npm ci
         -
            run: npm run build
         -
            shell: bash
            run: (cd dist && zip -r ../output.zip .)
         -
            shell: bash
            run: unzip -l output.zip
         -
            shell: bash
            run: echo ::set-env name=ZIPPED_BYTES::$(stat -c %s output.zip)
         -
            id: create_release
            uses: actions/create-release@v1
            env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
               tag_name: ${{ github.ref }}
               release_name: Release ${{ github.ref }}
               body: |
                  *Size:* ${{ env.ZIPPED_BYTES }} bytes
               draft: false
               prerelease: false
            if: startsWith(github.ref, 'refs/tags/v')
         -
            uses: actions/upload-release-asset@v1
            env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
               upload_url: ${{ steps.create_release.outputs.upload_url }}
               asset_path: ./output.zip
               asset_name: output.zip
               asset_content_type: application/zip
            if: startsWith(github.ref, 'refs/tags/v')
         -
            shell: bash
            run: unzip output.zip -d published
            if: startsWith(github.ref, 'refs/tags/v')
         -
            shell: bash
            run: echo ::set-env name=LATEST_TAG::$(git describe --tags $(git rev-list --tags="v[0-9.-]*" --max-count=1))
            if: "!startsWith(github.ref, 'refs/tags/v')"
         -
            uses: onebytegone/fetch-gh-release-asset@master
            with:
               version: tags/${{ env.LATEST_TAG }}
               file: output.zip
               output_file: last-tagged.zip
            if: "!startsWith(github.ref, 'refs/tags/v')"
         -
            shell: bash
            run: unzip last-tagged.zip -d published
            if: "!startsWith(github.ref, 'refs/tags/v')"
         -
            shell: bash
            run: unzip output.zip -d published/latest
         -
            uses: peaceiris/actions-gh-pages@v3
            with:
               github_token: ${{ secrets.GITHUB_TOKEN }}
               publish_dir: published
