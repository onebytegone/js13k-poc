let collidableObjects=[];function makeWallEl(t){const e=document.createElement("a-box");return e.setAttribute("width",t),e.setAttribute("height","4"),e.setAttribute("depth","0.25"),e.setAttribute("color","#ededea"),e.setAttribute("collidable",""),e}function createWall(t,e,o,n){if("gap"===n)return;const i=document.querySelector("a-scene");let a=0,r=0;if(0===o?(a=0,r=-4):1===o?(a=4,r=0):2===o?(a=0,r=4):(a=-4,r=0),"door"===n){const n=makeWallEl("2.5");sideB=makeWallEl("2.5"),n.setAttribute("position",`${8*t+a+(o+1)%2*2.75} 2 ${8*e+r+o%2*2.75}`),n.setAttribute("rotation",`0 ${o%2*90} 0`),i.appendChild(n),sideB.setAttribute("position",`${8*t+a+(o+1)%2*-2.75} 2 ${8*e+r+o%2*-2.75}`),sideB.setAttribute("rotation",`0 ${o%2*90} 0`),i.appendChild(sideB)}else{const n=makeWallEl("8");n.setAttribute("position",`${8*t+a} 2 ${8*e+r}`),n.setAttribute("rotation",`0 ${o%2*90} 0`),i.appendChild(n)}}function createFloor(t,e){const o=document.createElement("a-plane"),n=document.querySelector("a-scene"),i=8*t,a=8*e;o.setAttribute("position",`${i/2-4} 0 ${a/2-4}`),o.setAttribute("width",i),o.setAttribute("height",a),o.setAttribute("rotation","-90 0 0"),o.setAttribute("material",`src: #floor; repeat: ${1.6*i}, ${1.6*a}`),n.appendChild(o)}AFRAME.registerComponent("collidable",{init:function(){this.bounds=new THREE.Box3,collidableObjects.push(this)},update:function(){this.bounds.setFromObject(this.el.object3D)}}),AFRAME.registerComponent("collider",{schema:{radius:{default:1}},init:function(){this.lastPosition=this.el.object3D.position.clone()},tick:function(){const t=this.el.object3D.position,e=this.data.radius;collidableObjects.find(o=>o.bounds&&t.x+e>o.bounds.min.x&&t.x-e<o.bounds.max.x&&t.z+e>o.bounds.min.z&&t.z-e<o.bounds.max.z)?t.copy(this.lastPosition):this.lastPosition.copy(t)}}),u=l=d=r=s=0,onkeydown=onkeyup=t=>{top["lld*rlurdu"[t.which%32%17]]=t.type[5],s=t.shiftKey},document.onreadystatechange=function(){if("complete"!==document.readyState)return;const t=t=>e=>{e.target.dataset.inputs.split(",").forEach(e=>{top[e]=t}),e.preventDefault()};document.querySelectorAll(".on-screen-controls button").forEach(e=>{e.addEventListener("mousedown",t(!0)),e.addEventListener("touchstart",t(!0)),e.addEventListener("mouseup",t()),e.addEventListener("touchend",t()),e.addEventListener("touchcancel",t())})},AFRAME.registerComponent("movement",{schema:{walk:{default:65},run:{default:220}},init:function(){this.camera=this.el,this.easing=1.1,this.velocity=new THREE.Vector3},tick:function(t,e){const o=this.velocity;e/=1e3,this.updateVelocity(e),(o.x||o.z)&&this.el.object3D.position.add(this.getMovementVector(e))},updateVelocity:function(t){const e=this.velocity;if(t>.2)return e.x=0,void(e.z=0);const o=Math.pow(1/this.easing,60*t);0!==e.x&&(e.x-=e.x*o),0!==e.z&&(e.z-=e.z*o),Math.abs(e.x)<1e-5&&(e.x=0),Math.abs(e.z)<1e-5&&(e.z=0);const n=s?this.data.run:this.data.walk;(u||d)&&(e.z+=n*t*(u?-1:1)),(l||r)&&(e.x+=n*t*(l?-1:1))},getMovementVector:function(){var t=new THREE.Vector3(0,0,0),e=new THREE.Euler(0,0,0,"YXZ");return function(o){const n=this.camera.getAttribute("rotation"),i=this.velocity;return t.copy(i),t.multiplyScalar(o),n?(e.set(0,THREE.Math.degToRad(n.y),0),t.applyEuler(e),t):t}}()});const PRNG=function(t){return{next:function(){return(t=(9301*t+49297)%233280)/233280},between:function(t,e,o){const n=t+this.next(o)*(e-t);return o?Math.round(n):n}}};function generateMap(t,e,o){const n=["gap","wall","door"];return[...Array(o).keys()].map(o=>[...Array(e).keys()].map(e=>({N:0===o?"wall":n[t.between(0,2,!0)],W:0===e?"wall":n[t.between(0,2,!0)]})))}function renderMap(t){const e=t.length,o=t[0].length;createFloor(e,o),t.forEach((t,e)=>{t.forEach((t,o)=>{createWall(o,e,0,t.N),createWall(o,e,3,t.W)}),createWall(o,e,3,"wall")}),t[0].forEach((t,o)=>{createWall(o,e,0,"wall")})}function drawFloorTexture(){const t=document.getElementById("floor"),e=t.getContext("2d"),o=t.width,n=t.height;e.fillStyle="#eee",e.fillRect(0,0,o,n),e.strokeStyle="#333",e.lineWidth=1,drawPolygon(e,0,0,o/2,6),e.stroke(),drawPolygon(e,o,n,o/2,6),e.stroke(),e.strokeStyle="#aaa",e.strokeRect(0,0,o,n)}function drawPolygon(t,e,o,n,i){if(i<3)return;const a=2*Math.PI/i;t.beginPath(),t.translate(e,o),t.moveTo(n,0);for(let e=1;e<i;e++)t.lineTo(n*Math.cos(a*e),n*Math.sin(a*e));t.closePath(),t.translate(-e,-o)}window.onload=()=>{const t=Math.floor(100*Math.random()),e=generateMap(PRNG(t),10,10);console.log(t),drawFloorTexture(),renderMap(e)};